FROM nvcr.io/nvidia/tensorrt:22.12-py3 AS build
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y git build-essential python3-dev python3-pip
RUN pip3 install cmake numpy packaging setuptools wheel

# Install ONNXRuntime: build-wheel needs python3-dev, numpy, packaging, setuptools, wheel
ENV ORT_INSTALL_DIR /onnxruntime
ENV ORT_RELEASE_TAG v1.14.1
RUN git clone --recursive -b $ORT_RELEASE_TAG https://github.com/microsoft/onnxruntime.git /tmp/onnxruntime

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
RUN cd /tmp/onnxruntime && \
    ./build.sh --config Release \
    --build_shared_lib \
    --cuda_home /usr/local/cuda \
    --cudnn_home /usr/lib/x86_64-linux-gnu/ \
    --use_cuda \
    --use_tensorrt \
    --tensorrt_home /usr/lib/x86_64-linux-gnu/ \
    --build_wheel \
    --update \
    --parallel \
    --cmake_extra_defines \
    CMAKE_INSTALL_PREFIX=$ORT_INSTALL_DIR \
    CMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
    CMAKE_CUDA_ARCHITECTURES="52;60;61;70;75;86"
RUN cd /tmp/onnxruntime/build/Linux/Release && \
    make install && ldconfig

# For some reason, build_wheel above doesn't work, so we build the wheel manually
RUN cd /tmp/onnxruntime/build/Linux/Release && \
    python3 /tmp/onnxruntime/setup.py bdist_wheel && \
    cp dist/*.whl $ORT_INSTALL_DIR

# Build OpenCV
# Video I/O dependencies
RUN apt-get install -y pkg-config libavcodec-dev libavformat-dev libswscale-dev
RUN pip3 install cmake numpy

# Install opencv: python version needs python3-dev, numpy
ENV OPENCV_INSTALL_DIR /opencv
ENV OPENCV_RELEASE_TAG 4.7.0
RUN git clone --recursive -b $OPENCV_RELEASE_TAG https://github.com/opencv/opencv.git /tmp/opencv
RUN git clone --recursive -b $OPENCV_RELEASE_TAG https://github.com/opencv/opencv_contrib.git /tmp/opencv_contrib

RUN cd /tmp/opencv && mkdir -p build && cd build && \
    cmake -S .. -B . \
    -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=$OPENCV_INSTALL_DIR \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D INSTALL_C_EXAMPLES=OFF \
    -D BUILD_EXAMPLES=OFF \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D WITH_CUDA=ON \
    -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules && \
    make -j$(nproc) && \
    make install && \
    ldconfig

FROM nvcr.io/nvidia/tensorrt:22.12-py3 AS binary
# ONNXRuntime
ENV ORT_INSTALL_DIR /onnxruntime
ENV PATH=$ORT_INSTALL_DIR/bin:$PATH
ENV LD_LIBRARY_PATH=$ORT_INSTALL_DIR/lib:$LD_LIBRARY_PATH
COPY --from=build $ORT_INSTALL_DIR $ORT_INSTALL_DIR

RUN apt-get update && apt-get install -y python3 python3-pip
RUN pip3 install $ORT_INSTALL_DIR/*.whl
RUN pip3 install cmake

# OpenCV
ENV OPENCV_INSTALL_DIR /opencv
ENV PATH=$OPENCV_INSTALL_DIR/bin:$PATH
ENV LD_LIBRARY_PATH=$OPENCV_INSTALL_DIR/lib:$LD_LIBRARY_PATH
COPY --from=build $OPENCV_INSTALL_DIR $OPENCV_INSTALL_DIR

# To use opencv in python
RUN apt-get install -y python3 python3-pip ffmpeg
RUN pip3 install numpy
RUN ln -s $OPENCV_INSTALL_DIR/lib/python3.8/site-packages/cv2 /usr/local/lib/python3.8/dist-packages
